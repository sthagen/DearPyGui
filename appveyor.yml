version: 0.8.{build}

branches:
  only:
  - master
build:
  verbosity: minimal
  
# Do not build on tags
skip_tags: true

only_commits:
  message: /(appveyor)/

environment:

  pypi_password:
    secure: tKYM1oHNwH7n+FO1exDSPzz76oio0iXtsfkZ0o7kuOY=

  git_token:
    secure: kRikZcYHTs5za4HnpeKZfM8dAD6emA68ZpDDkS+hvXa9IEPOAR8C7LCFnmKMTful

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ARCH: "x64"
      CONFIG: Release
      PYVER: 36
      PYLOC: "python"
      PYSTACK: "3.6"
      PYFULLVERSION: "3.6.12"
      MACOS: "true"

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ARCH: "x64"
      CONFIG: Release
      PYVER: 36
      PYLOC: "python"
      PYSTACK: "3.6"
      PYFULLVERSION: "3.6.12"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      GENERATOR: "Visual Studio 16 2019"
      ARCH: "x64"
      CONFIG: Release
      PYVER: 36
      PYLOC: "C:/Python36-x64/python.exe"
      PYSTACK: "3.6"
      PYFULLVERSION: "3.6.12"

    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ARCH: "x64"
      CONFIG: Release
      PYVER: 37
      PYLOC: "python"
      PYSTACK: "3.7"
      PYFULLVERSION: "3.7.9"
      MACOS: "true"

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ARCH: "x64"
      CONFIG: Release
      PYVER: 37
      PYLOC: "python"
      PYSTACK: "3.7"
      PYFULLVERSION: "3.7.10"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      GENERATOR: "Visual Studio 16 2019"
      ARCH: "x64"
      CONFIG: Release
      PYVER: 37
      PYLOC: "C:/Python37-x64/python.exe"
      PYSTACK: "3.7"
      PYFULLVERSION: "3.7.9"
    
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ARCH: "x64"
      CONFIG: Release
      PYVER: 38
      PYLOC: "python"
      PYSTACK: "3.8"
      PYFULLVERSION: "3.8.6"
      MACOS: "true"
    
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ARCH: "x64"
      CONFIG: Release
      PYVER: 38
      PYLOC: "python"
      PYSTACK: "3.8"
      PYFULLVERSION: "3.8.10"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      GENERATOR: "Visual Studio 16 2019"
      ARCH: "x64"
      CONFIG: Release
      PYVER: 38
      PYLOC: "C:/Python38-x64/python.exe"
      PYSTACK: "3.8"
      PYFULLVERSION: "3.8.5"

    - APPVEYOR_BUILD_WORKER_IMAGE: macos-mojave
      ARCH: "x64"
      CONFIG: Release
      PYVER: 39
      PYLOC: "python"
      PYSTACK: "3.9"
      PYFULLVERSION: "3.9.1"
      MACOS: "true"

    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ARCH: "x64"
      CONFIG: Release
      PYVER: 39
      PYLOC: "python"
      PYSTACK: "3.9"
      PYFULLVERSION: "3.9.5"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      GENERATOR: "Visual Studio 16 2019"
      ARCH: "x64"
      CONFIG: Release
      PYVER: 39
      PYLOC: "C:/Python39-x64/python.exe"
      PYSTACK: "3.9"
      PYFULLVERSION: "3.9.0"
      PYDOCRUN: "true"

matrix:
  fast_finish: true

stack:
  python %PYSTACK%

# actual build
build_script:
  
  # Windows
  - cmd: git submodule update --init --recursive ./Dependencies/imgui
  - cmd: git submodule update --init --recursive ./Dependencies/freetype
  - cmd: git submodule update --init --recursive ./Dependencies/ImGuiFileDialog
  - cmd: mkdir cmake-build-release
  - cmd: cd cmake-build-Release
  - cmd: cmake .. -G "%GENERATOR%" -A "%ARCH%" -DMVDIST_ONLY=True -DMVPY_VERSION=%PYVER% -DMVDPG_VERSION=%APPVEYOR_BUILD_VERSION%
  - cmd: cd ..
  - cmd: cmake --build cmake-build-release --config "%CONFIG%"

  # Ubuntu Only
  - sh: |
      if [ "$MACOS" = "" ]; then
          sudo apt-get update
          sudo apt-get install libglu1-mesa-dev libgl1-mesa-dev xorg-dev libxrandr-dev -y
          sudo apt-get install libfreetype6-dev -y
          sudo apt-get install libharfbuzz-dev -y
      fi

  # Ubuntu & MacOS
  - sh: git submodule update --init --recursive ./Dependencies/imgui
  - sh: git submodule update --init --recursive ./Dependencies/freetype
  - sh: git submodule update --init --recursive ./Dependencies/ImGuiFileDialog
  - sh: git submodule update --init --recursive ./Dependencies/glfw
  - sh: mkdir cmake-build-release
  - sh: cd cmake-build-release
  - sh: cmake .. -DMVDIST_ONLY=True -DMVPY_VERSION=${PYVER} -DMVDPG_VERSION=${APPVEYOR_BUILD_VERSION}
  - sh: cd ..
  - sh: cmake --build cmake-build-release --config "${CONFIG}"

on_success:
  
  - cd Distribution

  # Windows
  - cmd: call %PYLOC% -m pip install --upgrade pip
  - cmd: call %PYLOC% BuildPythonWheel.py C:\projects\dearpygui\cmake-build-release\DearPyGui\Release\_dearpygui.pyd "%APPVEYOR_BUILD_VERSION%"
  - cmd: call %PYLOC% -m pip install twine
  - cmd: call %PYLOC% -m pip install wheel
  - cmd: call %PYLOC% -m setup bdist_wheel --plat-name win_amd64 --dist-dir C:/projects/dearpygui/dist
  - cmd: if "%APPVEYOR_REPO_COMMIT_MESSAGE:(test pypi)=%" neq "%APPVEYOR_REPO_COMMIT_MESSAGE%" call %PYLOC% -m twine upload --repository testpypi C:/projects/dearpygui/dist/* -u RaylockLLC -p %pypi_password% --skip-existing
  - cmd: if "%APPVEYOR_REPO_COMMIT_MESSAGE:(pypi)=%" neq "%APPVEYOR_REPO_COMMIT_MESSAGE%" call %PYLOC% -m twine upload C:/projects/dearpygui/dist/* -u RaylockLLC -p %pypi_password% --skip-existing
      
  #  # deploy test docs
  - ps: |
      if ( $env:APPVEYOR_REPO_COMMIT_MESSAGE -like "*(test pypi)*" )
      {
        if ( $env:PYDOCRUN -like "*true*" )
        {
          git config --global credential.helper store
          Add-Content -Path "$HOME\.git-credentials" -Value "https://$($env:git_token):x-oauth-basic@github.com`n" -NoNewline
          git config --global user.email "jonathanhoffstadt@yahoo.com"
          git config --global user.name "Jonathan Hoffstadt"
          cd C:\projects
          git clone -b gh-pages --single-branch "https://github.com/hoffstadt/dpg-test-py-docs"
          cd dpg-test-py-docs
          C:\Python39-x64\python.exe -m pip install -i https://test.pypi.org/simple/ dearpygui
          C:\Python39-x64\python.exe -m pip install pdoc3
          C:\Python39-x64\python.exe -m pdoc --html dearpygui -f
          C:\Python39-x64\python.exe html_script.py
          git commit -a -m "Update Docs for $env:APPVEYOR_BUILD_VERSION"
          git push origin gh-pages -q
        }
      }

  # deploy docs
  - ps: |
      if ( $env:APPVEYOR_REPO_COMMIT_MESSAGE -like "*(pypi)*" )
      {
        if ( $env:PYDOCRUN -like "*true*" )
        {
          cd ..
          git checkout gh-pages
          Add-Content -Path "$HOME\.git-credentials" -Value "https://$($env:git_token):x-oauth-basic@github.com`n" -NoNewline
          C:\Python39-x64\python.exe -m pip install C:\projects\dearpygui\dist\dearpygui-$env:APPVEYOR_BUILD_VERSION-cp39-cp39-win_amd64.whl
          C:\Python39-x64\python.exe -m pip install pdoc3
          C:\Python39-x64\python.exe -m pdoc --html dearpygui -f
          C:\Python39-x64\python.exe html_script.py
          git config --global credential.helper store
          git config --global user.email "jonathanhoffstadt@yahoo.com"
          git config --global user.name "Jonathan Hoffstadt"
          git commit -a -m "Update Docs for $env:APPVEYOR_BUILD_VERSION"
          git push origin gh-pages -q
        }
      }

  # Ubuntu & MacOS
  - sh: |
      ${PYLOC} -m pip install --upgrade pip
      if [ "$MACOS" = "" ]; then
        ${PYLOC} BuildPythonWheel.py /home/appveyor/projects/dearpygui/cmake-build-release/DearPyGui/_dearpygui.so ${APPVEYOR_BUILD_VERSION}
        ${PYLOC} -m pip install twine --upgrade
        ${PYLOC} -m pip install wheel
        ${PYLOC} -m setup bdist_wheel --plat-name manylinux1_x86_64 --dist-dir /home/appveyor/projects/dearpygui/dist
        if [[ "${APPVEYOR_REPO_COMMIT_MESSAGE}" == *"(test pypi)"* ]]; then
            ${PYLOC} -m twine upload --repository testpypi /home/appveyor/projects/dearpygui/dist/* -u RaylockLLC -p ${pypi_password} --skip-existing
        fi
        if [[ "${APPVEYOR_REPO_COMMIT_MESSAGE}" == *"(pypi)"* ]]; then
            ${PYLOC} -m twine upload /home/appveyor/projects/dearpygui/dist/* -u RaylockLLC -p ${pypi_password} --skip-existing
        fi
      else
        ${PYLOC} BuildPythonWheel.py /Users/appveyor/projects/dearpygui/cmake-build-release/DearPyGui/_dearpygui.so ${APPVEYOR_BUILD_VERSION}
        ${PYLOC} -m pip install twine --upgrade
        ${PYLOC} -m pip install wheel
        ${PYLOC} -m setup bdist_wheel --plat-name macosx-10.6-x86_64 --dist-dir /Users/appveyor/projects/dearpygui/dist
        if [[ "${APPVEYOR_REPO_COMMIT_MESSAGE}" == *"(test pypi)"* ]]; then
            ${PYLOC} -m twine upload --repository testpypi /Users/appveyor/projects/dearpygui/dist/* -u RaylockLLC -p ${pypi_password} --skip-existing
        fi
        if [[ "${APPVEYOR_REPO_COMMIT_MESSAGE}" == *"(pypi)"* ]]; then
            ${PYLOC} -m twine upload /Users/appveyor/projects/dearpygui/dist/* -u RaylockLLC -p ${pypi_password} --skip-existing
        fi
      fi